Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.

For example, given n = 3, a solution set is:

"((()))", "(()())", "(())()", "()(())", "()()()"

public class Solution {
    public List<String> generateParenthesis(int n) {
        List<String> ans = new ArrayList<String>();
        gp(ans,n,n,"");
        return ans;
    }
    public void gp(List<String> ans,int left,int right,String s){
        if(left>right||left<0) return;
        if(left==0&&right==0){
            ans.add(new String(s));
            return;
        } 
        else{
        if(left>0){
        
            gp(ans,left-1,right,s+'(');
        }
        if(right>left){
          
            gp(ans,left,right-1,s+')');
        }
        }
    }
}
