The gray code is a binary numeral system where two successive values differ in only one bit.

Given a non-negative integer n representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.

For example, given n = 2, return [0,1,3,2]. Its gray code sequence is:

00 - 0
01 - 1
11 - 3
10 - 2
Note:
For a given n, a gray code sequence is not uniquely defined.

For example, [0,2,3,1] is also a valid gray code sequence according to the above definition.

For now, the judge is able to judge based on one instance of gray code sequence. Sorry about that.

C++:
class Solution {
public:
    vector<int> grayCode(int n) {
        vector<int> res;
        if(n<0) return res;
        res.push_back(0);
        if(n==0) return res;
        res.push_back(1);
        int bit = 1;
        while(bit<n){
            int t = 1<<bit;
            for(int i=t-1;i>=0;i--){
                int m = res[i];
                res.push_back(m|t);
            }
            bit++;
        }
        return res;
    }
};

Java:
public class Solution {
    public List<Integer> grayCode(int n) {
        List<Integer> ans = new ArrayList<Integer>();
        if(n<0) return ans;
        ans.add(0);
        if(n==0) return ans;
        ans.add(1);
        int bit = 1;
        while(bit<n){
            int t = 1<<bit;
            for(int i = t-1;i>=0;i--){
                int elem = ans.get(i);
                ans.add(t|elem);
            }
            bit++;
        }
        return ans;
    }
}
