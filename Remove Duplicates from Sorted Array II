Follow up for "Remove Duplicates":
What if duplicates are allowed at most twice?

For example,
Given sorted array A = [1,1,1,2,2,3],

Your function should return length = 5, and A is now [1,1,2,2,3].

C++:
class Solution {
public:
    int removeDuplicates(int A[], int n) {
     
        if(n<=2) return n;
        int cnt = 0;
        int newl = 1;
        for(int i=1;i<n;i++){
          
            if(A[i]==A[i-1]){
                cnt++;
                if(cnt<=1){
                   // newl++;
                    A[newl++]=A[i];
                }
                continue;
            }
            if(cnt>1||A[i]!=A[i-1]){
               // newl++;
                A[newl++]=A[i];
                
                //newl = newl-c+1;
                cnt = 0;
            }
            
        }
        return newl;
    }
};

Java:
public class Solution {
    public int removeDuplicates(int[] A) {
        int l = A.length;
        if(l<=2) return l;
        int cnt = 0;
        int newl = 1;
        for(int i=1;i<l;i++){
           // newl++;
            if(A[i]==A[i-1]){
                cnt++;
                if(cnt<=1){
                   // newl++;
                    A[newl++]=A[i];
                }
                continue;
            }
            if(cnt>1||A[i]!=A[i-1]){
                A[newl++]=A[i];
               
                cnt = 0;
            }
            
        }
        return newl;
    }
}
