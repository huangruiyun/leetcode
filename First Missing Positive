Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space.

public class Solution {
    public int firstMissingPositive(int[] A) {
        int len = A.length;
        if(len==0) return 1;
        
        for(int i=0;i<len;i++){
            while(A[i]!=(i+1)&&A[i]>0&&A[i]<=len){
                int t = A[A[i]-1];
                if(t==A[i]) break;
                A[A[i]-1] = A[i]; 
                A[i] = t;
            }
        }
        //int ans =0;
        for(int j=0;j<len;j++){
           // ans = j;
            if(A[j]!=j+1) return j+1;
        }
        return len+1;
    }
}
