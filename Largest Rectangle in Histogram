Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.

C++:
class Solution {
public:
    int largestRectangleArea(vector<int> &height) {
        int len = height.size();
        if(len==0) return 0;
        vector<int>  l(len,0);
        vector<int> r(len,0);
        for(int i=0;i<len;i++){
            int j=i;
            while((j>0)&&(height[i]<=height[j-1])) j=l[j-1];
            l[i] = j;
        }
        for(int i=len-1;i>=0;i--){
            int j=i;
            while((j<len-1)&&(height[i]<=height[j+1])) j=r[j+1];
            r[i] = j;
        }
        int res =0;
        for(int i=0;i<len;i++){
            res = max(res,(r[i]-l[i]+1)*height[i]);
        }
        return res;
    }
};

Java:
public class Solution {
    public int largestRectangleArea(int[] height) {
        int len = height.length;
        if(len<1) return 0;
        int ans = 0;
        Stack<Integer> s = new Stack<Integer>();
       
        for(int i=0;i<=len;i++){
            int v = (i==len)?-1:height[i];
            
            while(!s.isEmpty()&&v<=height[s.peek()]) 
            {
                int t = s.pop();
                int w = s.isEmpty()?i:i-s.peek()-1;
                ans = Math.max(ans,height[t]*w);
               
            }
            s.push(i);
        }
        return ans; 
    }
}
