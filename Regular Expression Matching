Implement regular expression matching with support for '.' and '*'.

'.' Matches any single character.
'*' Matches zero or more of the preceding element.

The matching should cover the entire input string (not partial).

The function prototype should be:
bool isMatch(const char *s, const char *p)

Some examples:
isMatch("aa","a") → false
isMatch("aa","aa") → true
isMatch("aaa","aa") → false
isMatch("aa", "a*") → true
isMatch("aa", ".*") → true
isMatch("ab", ".*") → true
isMatch("aab", "c*a*b") → true

public class Solution {
    public boolean isMatch(String s, String p) {
        if(s.length()==0){
            if(p.length()%2!=0) return false;
            for(int i=1;i<p.length();i+=2){
                if(p.charAt(i)!='*') return false;
            }
            return true;
        }
        if(p.length()==0) return false;
        char a = s.charAt(0);
        char b = p.charAt(0);
        char b2 = '0';
        if(p.length()>1) b2 = p.charAt(1);
        if(b2=='*'){
            if(a==b||b=='.'){
                return isMatch(s.substring(1),p)||isMatch(s,p.substring(2));
            }
            else return isMatch(s,p.substring(2));
        }
        else{
            if(a!=b&&b!='.') return false;
            else return isMatch(s.substring(1),p.substring(1));
        }
       
    }
}
