Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.

Note:
Elements in a quadruplet (a,b,c,d) must be in non-descending order. (ie, a ≤ b ≤ c ≤ d)
The solution set must not contain duplicate quadruplets.
    For example, given array S = {1 0 -1 0 -2 2}, and target = 0.

    A solution set is:
    (-1,  0, 0, 1)
    (-2, -1, 1, 2)
    (-2,  0, 0, 2)
    
public class Solution {
    public List<List<Integer>> fourSum(int[] num, int target) {
      /*  List<List<Integer>> ans = new ArrayList<List<Integer>>();
        List<Integer> done = new ArrayList<Integer>();
        Arrays.sort(num);
        four(ans,done,num,target,0,0);
        return ans;
    }
    public static void four(List<List<Integer>> ans,List<Integer> done,int[] num,int t,int i,int cnt){
        if(t==0&&cnt==4){
            ans.add(new ArrayList<Integer>(done));
            return;
        }
        for(int j=i;j<num.length;j++){
            done.add(num[j]);
            int remain = t-num[j];
            cnt++;
            four(ans,done,num,remain,j+1,cnt);
            done.remove(done.size()-1);
            cnt--;
            while(j<num.length-1&&num[j]==num[j+1]){
                j++;
            }
        } */
        
        
        List<List<Integer>> ans = new ArrayList<List<Integer>>();
        Arrays.sort(num);
        int len = num.length;
        if(len<4) return ans;
        for(int i=0;i<len-3;i++){
            if(i>0&&num[i]==num[i-1]) continue;
            for(int j=i+1;j<len-2;j++){
                if(j>i+1&&num[j]==num[j-1]) continue;
                int l = j+1;
                int r = len-1;
                while(l<r){
                    int sum = num[i]+num[j]+num[l]+num[r];
                    if(sum==target){
                        List<Integer> done = new ArrayList<Integer>();
                        done.add(num[i]);
                        done.add(num[j]);
                        done.add(num[l]);
                        done.add(num[r]);
                        ans.add(done);
                        do{
                            l++;
                        } while(l<r&&num[l]==num[l-1]);
                        do{
                            r--;
                        } while(l<r&&num[r]==num[r+1]);
                    }
                    if(sum<target) l++;
                    if(sum>target) r--;
                }
            }
        }
        return ans; 
    }
}
