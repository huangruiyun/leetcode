Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode mergeKLists(List<ListNode> lists) {
        if(lists.size()==0) return null;
        ListNode ans = new ListNode(0);
        ListNode cur = ans;
        ListNode[] p = new ListNode[lists.size()];
        for(int i=0;i<lists.size();i++){
            p[i] = lists.get(i);
        }
       // int index = -1;
        while(true){
          int  index = -1;
            int min = Integer.MAX_VALUE;
            for(int i=0;i<p.length;i++){
                if(p[i]!=null&&p[i].val<min){
                    min = p[i].val;
                    index = i;
                }
            }
            if(index==-1) break;
            cur.next = new ListNode(min);
            p[index] = p[index].next;
            cur = cur.next;
        }
        return ans.next;
    }
}
