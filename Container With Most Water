Given n non-negative integers a1, a2, ..., an, where each represents a point at coordinate (i, ai). 
n vertical lines are drawn such that the two endpoints of line i is at (i, ai) and (i, 0). 
Find two lines, which together with x-axis forms a container, such that the container contains the most water.

Note: You may not slant the container.

public class Solution {
    public int maxArea(int[] height) {
        int l =height.length;
        if(l==0||l==1) return 0;
        int max = 0;
        int i = 0;
        int j =l-1;
        while(i<j){
            int s=Math.min(height[j],height[i])*(j-i);
            max = Math.max(s,max);
            if(height[j]>height[i]){
                i++;
            }
            else j--;
        }
        return max;
    }
}
