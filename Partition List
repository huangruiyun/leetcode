Given a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.

You should preserve the original relative order of the nodes in each of the two partitions.

For example,
Given 1->4->3->2->5->2 and x = 3,
return 1->2->2->4->3->5.

C++:
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *partition(ListNode *head, int x) {
        if(head==NULL||head->next==NULL) return head;
        ListNode *d = new ListNode(0);
        d->next = head;
        ListNode *pre = d;
        ListNode *st = d;
        ListNode *cur = head;
        while(cur!=NULL){
            if(cur->val>=x) break;
            else{
                cur = cur->next;
                pre = pre->next;
                st = st->next;
            }
        }
        while(cur!=NULL){
        if(cur->val>=x){
            pre = pre->next;
            cur = cur->next;
        }
        else{
            pre->next = cur->next;
            cur->next = st->next;
            st->next = cur;
            
            cur = pre->next;
            st = st->next;
            
        }
        }
        return d->next;
    }
};

Java:
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode partition(ListNode head, int x) {
        if(head==null) return null;
        if(head.next==null) return head;
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode pre = dummy;
        ListNode h = head;
       // ListNode begin = head;
        while(h!=null){
            if(h.val>=x){
              //  begin = h;
                break;
            } 
            else{
                 h = h.next;
                 pre = pre.next;
                 
            }
        }
        ListNode pre2 = pre;
        while(h!=null){
            if(h.val>=x){
                pre2 = pre2.next;
                h = h.next;
            }
            else{
                pre2.next = h.next;
                h.next = pre.next;
                pre.next = h;
                pre = pre.next;
                h = pre2.next;
            }
        }
        return dummy.next;
    }
}
