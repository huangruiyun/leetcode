Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.

public class Solution {
    public int minPathSum(int[][] grid) {
        int m = grid.length;
        int n = grid[0].length;
        
        int[][] d = new int[m][n];
        d[0][0] = grid[0][0];
        for(int i = 1;i<n;i++){
            d[0][i] = d[0][i-1]+grid[0][i];
        }
        for(int j = 1;j<m;j++){
            d[j][0] = d[j-1][0]+grid[j][0];
        }
        for(int x=1;x<m;x++){
            for(int y=1;y<n;y++){
                d[x][y] = Math.min(d[x-1][y],d[x][y-1])+grid[x][y];
            }
        }
        return d[m-1][n-1];
    }
}
