Given n, how many structurally unique BST's (binary search trees) that store values 1...n?

For example,
Given n = 3, there are a total of 5 unique's.

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3
   
   
C++:
class Solution {
public:
    int numTrees(int n) {
        if(n==0) return 0;
        int t[n+1];
        t[0] = 1;
        t[1] = 1;
        t[2] = 2;
        if(n>=3){
            for(int i=3;i<=n;i++){
                int res=0;
                for(int j=0;j<i;j++){
                    res += t[j]*t[i-1-j];
                }
                t[i] = res;
            }
        }
        return t[n];
    }
};

Java:
public class Solution {
    public int numTrees(int n) {
        if(n==0) return 0;
        int dp[]= new int[n+10];
        dp[0]=1;
        dp[1]=1;
        for(int i=2;i<=n;i++){
            dp[i]=0;
            for(int j=1;j<=i;j++){
                dp[i] += dp[j-1]*dp[i-j];
            }
        }
        return dp[n];
    }
}
