You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

C++:
class Solution {
public:
    int climbStairs(int n) {
        if(n<=1) return 1;
        int dp[n+1];
        dp[0] = 1;
        dp[1] = 1;
        dp[2] = 2;
        for(int i=3;i<=n;i++){
            dp[i] = dp[i-1]+dp[i-2];
        }
        return dp[n];
    }
};

Java:
public class Solution {
    public int climbStairs(int n) {
        if(n==0) return 0;
        int d[]= new int[n+10];
        d[0]=0;
        d[1]=1;
        d[2]=2;
          for(int i=3;i<=n;i++){
              d[i]=d[i-2]+d[i-1];
          }
        return d[n];
    }
}
