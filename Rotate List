Given a list, rotate the list to the right by k places, where k is non-negative.

For example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode rotateRight(ListNode head, int n) {
        if(head == null) return null;
        
        ListNode d = new ListNode(0);
        d.next = head;
        ListNode end = d;
        ListNode cur = head;
        int len = 0;
        while(cur!=null){
            end = end.next;
            cur = cur.next;
            len++;
        }
        int k = n%len;
        if(k==0||head.next == null) return head;
        ListNode pre = d;
        cur = head;
        for(int i=0;i<len-k;i++){
            cur = cur.next;
            pre = pre.next;
        }
        if(pre!=d){
        pre.next = end.next;
        end.next = d.next;
        d.next = cur;
        }
        return d.next;
    }
}
